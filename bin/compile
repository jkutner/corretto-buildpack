#!/usr/bin/env bash

# fail fast
set -e

# parse args
export BUILD_DIR=$1
export CACHE_DIR=$2
export ENV_DIR=$3

source <(curl --retry 3 -fsSL "https://lang-common.s3.amazonaws.com/buildpack-stdlib/v8/stdlib.sh")

export_env $ENV_DIR "."

install_corretto() {
  local jdk_dir=${1:?}

  rm -rf $jdk_dir # clobber any previously installed jdk
  mkdir -p $jdk_dir

  local url="${CORRETTO_URL:-https://d2znqt9b1bc64u.cloudfront.net/amazon-corretto-8.202.08.2-linux-x64.tar.gz}"
  local checksum="${CORRETTO_CHECKSUM:-23a4e82eb9737dfd34c748b63f8119f7}"

  echo "-----> Installing Corretto JDK"
  if [ -n "$checksum" ]; then
    local jdk_downloaded_file="/tmp/jdk.tgz"
    echo "       - downloading"
    curl --retry 3 -o "$jdk_downloaded_file" -sL "$url"

    echo "       - verifying checksum ($checksum)"
    actual_checksum="$(md5sum ${jdk_downloaded_file} | awk '{ print $1 }')"
    if [ "$actual_checksum" != "$checksum" ]; then
      echo "Invalid checksum!"
      echo "Expected => $checksum"
      echo "Found    => $actual_checksum"
      exit 1
    fi

    echo "       - unpacking"
    tar xzmf "$jdk_downloaded_file" -C "$jdk_dir" --strip-components=1
  else
    echo "       - downloading and unpacking"
    curl --retry 3 -sL "$url" | tar xzm -C "$jdk_dir" --strip-components=1
  fi

  echo "       - pruning"
  rm -rf "${jdk_dir}/demo"
  rm -rf "${jdk_dir}/sample"
  rm -rf "${jdk_dir}/man"
  rm -rf "${jdk_dir}/sample"
  rm -f "${jdk_dir}/src.zip"
  rm -f "${jdk_dir}/javafx-src.zip"
  echo "       - done"
}

create_profile_scripts() {
  local home=${1:?}
  local url=${2:?}

  mkdir -p $home/.profile.d

  echo "-----> Configuring"
  curl -o $home/.profile.d/corretto.sh -sL "$url/opt/jvmcommon.sh"
  curl -o $home/.profile.d/jdbc.sh -sL "$url/opt/jdbc.sh"
  echo "       - done"
}

create_export_script() {
  local jdk_dir=${1:?}
  local home=${2:?}

  if [ -w ${home} ]; then
    cat << EOF > ${home}/export
export JAVA_HOME=$jdk_dir
export PATH=\$JAVA_HOME/bin:\$PATH
export LD_LIBRARY_PATH="\$JAVA_HOME/jre/lib/amd64/server:\$LD_LIBRARY_PATH"
EOF
  fi
}

BP_DIR="$(cd "$(dirname "$0")" && pwd)"
OPT_DIR=$BP_DIR/../opt/

JDK_DIR="$BUILD_DIR/.jdk"
JVM_COMMON_URL="https://raw.githubusercontent.com/heroku/heroku-buildpack-jvm-common/master/"

install_corretto "$JDK_DIR"
create_profile_scripts "$BUILD_DIR" "$JVM_COMMON_URL"
create_export_script "$JDK_DIR" "$(pwd)"
